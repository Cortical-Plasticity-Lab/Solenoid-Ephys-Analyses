function fig = CompareTimeToLFPMinima(C,varargin)
%COMPARETIMETOLFPMINIMA Compare distribution of onset times between RFA and S1 on per-channel distribution for solenoid trials
%
%  fig = Figures.CompareTimeToLFPMinima(C);
%  fig = Figures.CompareTimeToLFPMinima(C,'Name',value,...);
%
% Inputs
%  C        - Table output by tbl.stats.estimateChannelResponse
%  varargin - (Optional) 'Name',value parameter pairs. Most are cell arrays
%                        that default as empty but can be used to supply
%                        additional parameter pair arguments to the
%                        corresponding Matlab built-in object (see "PARS"
%                        section in code for details).
%
% Output
%  fig      - Figure handle
%
% See also: Figures, example_response_estimation

% Make sure input is correct table
if ~strcmp(C.Properties.UserData.type,'ChannelResponseTable')
   error('Bad table type <strong>(%s)</strong>: should be ChannelResponseTable.\n',...
      C.Properties.UserData.type);
end
   
% PARS % % % %
pars = struct;
pars.Axes_Args = {}; % Extra Axes parameter pairs
pars.Bar_Args_RFA = {}; % Extra parameter pairs for RFA histogram graphic
pars.Bar_Args_S1 = {}; % Extra parameter pairs for S1 histogram graphic
pars.Bins = 30:10:250;  % Default histogram bin edges (ms)
pars.Figure_Args = {}; % Extra figure parameter pairs
pars.Histogram_Args = {}; % Extra parameters for histogram estimation
pars.KDE_Args = {}; % Example: fig = Figures.CompareTimeToLFPMinima(C,'KDE_Args',{'Bandwidth',0.5}); % Changes the bandwidth on KDE estimator
pars.KDE_Line_Args_RFA = {}; % Extra parameter pairs for RFA KDE graphic line
pars.KDE_Line_Args_S1 = {}; % Extra parameter pairs for S1 KDE graphic line
pars.Label_Args = {}; % Default axes label parameter pairs
pars.XLim = [30 250]; % Default axes X-Limits
fn = fieldnames(pars);
for iV = 1:2:numel(varargin)
   idx = strcmpi(fn,varargin{iV});
   if sum(idx)==1
      pars.(fn{idx}) = varargin{iV+1};
   end
end
% END PARS % %

fig = utils.formatDefaultFigure(figure,...
   'Name','Distributions of LFP Time-to-Minima (ms)',...
   pars.Figure_Args{:}); 

% Make S1 axes
ax = utils.formatDefaultAxes(subplot(1,2,1),...
   'Parent',fig,'XLim',pars.XLim,...
   pars.Axes_Args{:}); % Helper to apply MM-preferred axes properties
histogram(ax,C.LFP_tMin(C.Type=="Solenoid" & C.Area=="S1"),pars.Bins,...
   'FaceColor',cfg.gfx('Color_S1'),...
   'EdgeColor','none',...
   'Normalization','pdf',...
   pars.Histogram_Args{:});
set(findobj(ax.Children','Type','histogram'),...
   'DisplayName','Observed Distribution',...
   pars.Bar_Args_S1{:});
ksdensity(ax,C.LFP_tMin(C.Type=="Solenoid" & C.Area=="S1"),...
   'Function','pdf',...
   'Kernel','Epanechnikov',...
   pars.KDE_Args{:}); % Epanechnikov: kernel is optimal with respect to minimizing mean-square error
set(findobj(ax.Children,'Type','line'),...
   'LineWidth',2.5,...
   'Color','k',...
   'LineStyle',':',...
   'DisplayName','Smoothed Distribution Estimate',...
   pars.KDE_Line_Args_S1{:});
utils.formatDefaultLabel(...
   [title(ax,'S1');...
    xlabel(ax,'Time (ms)');...
    ylabel(ax,'Count')],...
    'Color',cfg.gfx('Color_S1'),...
    pars.Label_Args{:});
utils.addLegendToAxes(ax); % Add formatted axes

% Make RFA axes
ax = utils.formatDefaultAxes(subplot(1,2,2),...
   'Parent',fig,...
   'XLim',pars.XLim,...
   'YLim',ax.YLim,...  % Give it the same y-limits as the S1 axes
   pars.Axes_Args{:}); % Helper to apply MM-preferred axes properties 
histogram(ax,C.LFP_tMin(C.Type=="Solenoid" & C.Area=="RFA"),pars.Bins,...
   'FaceColor',cfg.gfx('Color_RFA'),...
   'EdgeColor','none',...
   'Normalization','pdf',...
   pars.Histogram_Args{:});
set(findobj(ax.Children','Type','histogram'),...
   'DisplayName','Observed Distribution',...
   pars.Bar_Args_RFA{:});
ksdensity(ax,C.LFP_tMin(C.Type=="Solenoid" & C.Area=="RFA"),...
   'Function','pdf',...
   'Kernel','Epanechnikov',...
   pars.KDE_Args{:});  % Epanechnikov: kernel is optimal with respect to minimizing mean-square error
set(findobj(ax.Children,'Type','line'),...
   'LineWidth',2.5,...
   'Color','k',...
   'LineStyle',':',...
   'DisplayName','Smoothed Distribution Estimate',...
   pars.KDE_Line_Args_RFA{:});
utils.addLegendToAxes(ax); % Add formatted axes
utils.formatDefaultLabel(...
   [title(ax,'RFA');...
   xlabel(ax,'Time (ms)');...
   ylabel(ax,'Count')],...
   'Color',cfg.gfx('Color_RFA'),...
   pars.Label_Args{:});