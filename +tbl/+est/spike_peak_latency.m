load('Figure4.mat', 'T') % Load table 'T' from spike_peak_amplitude
binSize = T.Properties.UserData.settings.binwidth; 
C = tbl.stats.estimateChannelResponse(T,@(X){nanmean(X,1)},'Spikes','Spike_Mean');
tSpike = T.Properties.UserData.t.Spikes; 
tStimulus = 0;
inputVars = {'Spike_Mean'};
outputVars = 'Spike_tMax';
desc = ['Average time of peaks in spiking'];
fcn = @(Spike_Mean)tbl.est.tSpikePeak(Spike_Mean,tStimulus,tSpike,'max');
C = tbl.stats.estimateChannelResponse(C,fcn,inputVars,outputVars,...
   'OutputVariableUnits','sec','OutputVariableDescription',desc);
%% Group data by variables and convert to ms
C.Spike_tMax = C.Spike_tMax.*1e3;
C.Solenoid_Onset = (round(C.Solenoid_Onset,2).*1e3);
C.ICMS_Onset = (round(C.ICMS_Onset,2).*1e3);
[~,G] = findgroups(C(:,{'Area','Type','Solenoid_Onset','ICMS_Onset'}));
%% Plot spiking maxima
[idx,g] = findgroups(G(:,{'Area','Type'}));
combo = size(g,1);
for i =  1 : combo
    filt = (idx == i);
    groupings = G(filt,:);
    fig = Figures.CompareGroupedResponses(C,groupings,'Spike_tMax',...
        'FigureName','Distributions of time to LFP trial-averaged minima using Solenoid Retraction',...
        'Color',[cfg.gfx('Color_S1'); cfg.gfx('Color_RFA')],...
        'ExclusionThreshold',[-50 250],...
        'YLim',[0 0.2],...
        'XLim',[-50 250],...
        'PeakMarker_Args',...
        {'CoordinateMarkerArgs',[3,4,1,2],...
        'XCoordinate','',...
        'YCoordinate','p=',...
        'CoordinateSpec',['%s%5.3f' newline '%s%4.1f ms']},...
        'KSMinProminence',0.003,...
        'KSMinProximity',0.03,...
        'Bins',-50:10:250);
end
%% Run GLME model
glme = fitglme(C,...
    'Spike_tMax ~ 1 + Type*Area + (1|ChannelID)',...
    'Distribution','Normal','Link','Identity');
clearvars -except T C glme